#!/bin/sh

echo '\n\n'`date | awk '{print $3" "$2" "$6"  "$4}'` --  "Starting install script..";


#################
#     SQL       #
#################

while getopts "d" OPT; do
case $OPT in
	d)
		if [ $# -eq 1 ]; then
			echo ""
			echo "Incorrect usage of sql installer option : use - './deploy -i user password'";
			exit 0;
		fi
		MYSQL_USER="$2";
		MYSQL_PASS="$3";
		echo "";
		echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- "Creating SQL structure..";
		mysql -u $MYSQL_USER -p$MYSQL_PASS < sql_structure;

#mysql -u $MYSQL_USER -p$MYSQL_PASS < mock_settings_table;
esac
done


#################
#      VARS     #
#################

LOG_DIR="/var/log/cable_guardian/"
ETC_INIT="/etc/init/"
ETC_LOGROTATE="/etc/logrotate.d/"
ETC_CRONHOURLY="/etc/cron.hourly/"
GNOKII_DIR="$HOME/.config/gnokii/"
VAR_WWW="/var/www/"
VAR_HTML="/var/www/html/"

SETIP="/var/www/setip.sh"
SETTIME="/var/www/settime.sh"
INIT_CGC="/etc/init/cable_guardian.conf"
INIT_CGCS="/etc/init/cable_guardian_smsd.conf"
LOGROTATE_F="/etc/logrotate.d/cable_guardian"
CRONHOURLY_F="/etc/cron.hourly/cable_guardian_hourly"
I2CADAPT_DIR="/sys/class/i2c-adapter/"
I2CEXT_DIR="/sys/class/i2c-adapter/i2c-1/"
RTC_PATH="/sys/class/i2c-adapter/i2c-1/new_device"
CLOCK_INIT="/etc/init.d/clock_init"
CG_INIT_F="/etc/init.d/CableGuardian.jar"
GNOKII_F="$HOME/.config/gnokii/config"

#################
#  CREATE DIRS  #
#################
echo ""
echo `date | awk '{print $3" "$2" "$6"  "$4}'` --  "Checking directories..";
if [ ! -d "$LOG_DIR" ]; then
	mkdir -p $LOG_DIR;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created directory "$LOG_DIR";
fi

if [ ! -d "$ETC_INIT" ]; then
	mkdir -p $ETC_INIT;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created directory "$ETC_INIT";
fi

if [ ! -d "$ETC_LOGROTATE" ]; then
	mkdir -p $ETC_LOGROTATE;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created directory "$ETC_LOGROTATE";
fi

if [ ! -d "$ETC_CRONHOURLY" ]; then
	mkdir -p $ETC_CRONHOURLY;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created directory "$ETC_CRONHOURLY";
fi

if [ ! -d "$VAR_WWW" ]; then
	mkdir -p $VAR_WWW;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created directory "$VAR_WWW";
fi

if [ ! -d "$VAR_HTML" ]; then
	mkdir -p $VAR_HTML;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created directory "$VAR_HTML";
fi

if [ ! -d  "$GNOKII_DIR" ]; then
        mkdir -p $GNOKII_DIR;
        echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created directory "$GNOKII_DIR";
fi


#################
# CREATE  FILES #
#################
echo ""
echo `date | awk '{print $3" "$2" "$6"  "$4}'` --  "Creating Cable Guardian files..";

# Main files
cp -iv cable_guardian.conf $INIT_CGC;
cp -iv cable_guardian_smsd.conf $INIT_CGCS;
cp -iv cable_guardian $LOGROTATE_F;
cp -iv cable_guardian_hourly $CRONHOURLY_F; chmod +x $CRONHOURLY_F;
cp -iv clock_init $CLOCK_INIT; chmod +x $CLOCK_INIT;
cp -iv settime.sh $SETTIME; chmod +x $SETTIME;
cp -iv setip.sh $SETIP; chmod +x $SETIP;

# WWW files
cp -r www/* $VAR_HTML/

# Core files
cp -iv CBUpdater $HOME/
cp -iv CableGuardian.jar $CG_INIT_F;

# GNOKII files
cp -iv config $GNOKII_F;

######DONE WITH GNOKII##########


#################
#    PLUGINS    #
#################
echo ""
echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- "Checking plugins..";
apt-get install apache2-suexec

SET_CHECK=`cat /etc/sudoers | grep /var/www/set`
if [ -z "$SET_CHECK" ]; then
	echo 'www-data ALL = (ALL) NOPASSWD: /var/www/setip.sh\nwww-data ALL = (ALL) NOPASSWD: /var/www/settime.sh' >> /etc/sudoers;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Added setters to /etc/sudoers;
fi

###################
# BeagleBoneBoard #
###################

echo ""
if [ ! -d "$I2CADAPT_DIR" ]; then
	mkdir -p $I2CADAPT_DIR;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- "Checking set up of BeagleBone RealTimeClock, Created $I2CADAPT_DIR";
fi
if [ ! -d "$I2CEXT_DIR" ]; then
        mkdir -p $I2CEXT_DIR;
        echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created $I2CEXT_DIR;
fi

ntpdate -b -s -u pool.ntp.org
if [ ! -e $RTC_PATH ]; then
	echo ds1307 0x68 > $RTC_PATH;
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` -- Created $RTC_PATH;
	echo System time is `date | awk '{print $3" "$2" "$6" , "$4}'`;
	echo "Set the device time. An IO error should be fine if device is already set up."
	hwclock -w -f /dev/rtc1;
	echo And the RTC time is now `hwclock -r -f /dev/rtc1 | awk '{print $3" "$2" "$4" , "$5" "$6}'` , which should be the same with the system.;
fi


CHECK_C_I=`cat /etc/rc.local | grep /etc/init.d/clock_init`
if [ -z "$CHECK_C_I" ]; then
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` --  "Adding $CLOCK_INIT to startup";
	sed -i -e '$i\\/etc\/init.d\/clock_init' /etc/rc.local
else
	echo `date | awk '{print $3" "$2" "$6"  "$4}'` --  "$CHECK_C_I script is in startup.";
fi

#############
# START CG  #
#############
service cable_guardian start

##############
#    DONE    #
##############
echo ""
echo `date | awk '{print $3" "$2" "$6"  "$4}'` --  “Install script finished”
echo '\n\n'------------------------------------------------------------------------------
